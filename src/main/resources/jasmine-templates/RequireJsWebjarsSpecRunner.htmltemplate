<!DOCTYPE html>
<html>
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=$sourceEncoding$">
  $if(autoRefresh)$
  <meta http-equiv="refresh" content="$autoRefreshInterval$">
  $endif$
  <title>Jasmine Spec Runner</title>
  <script type="text/javascript" src="/webjars/webjars.js"></script>
  <script type="text/javascript">
    window.onerror = function(msg,url,line) {
      if (document.head) {
        var jserror = document.head.getAttribute('jmp_jserror') || '';
        if (jserror) {
          jserror += ':!:';
        }
        jserror += msg;
        document.head.setAttribute('jmp_jserror',jserror);
      }
    };

    document.write(('<link rel="stylesheet" type="text/css" href="/webjars/jasmine/V/jasmine.css"/>' +
           '<script type="text/javascript" src="/webjars/jasmine/V/jasmine.js">\x3C/script>' +
           '<script type="text/javascript" src="/webjars/jasmine/V/jasmine-html.js">\x3C/script>' +
           '<script type="text/javascript" src="/webjars/jasmine/V/boot.js">\x3C/script>')
        .replace(/V/g, webjars.versions['jasmine']));
  </script>
  $preloadScriptTags$

  <script type="text/javascript">
    if(window.location.href.indexOf("ManualSpecRunner.html") !== -1) {
      document.body.appendChild(document.createTextNode("Warning: opening this HTML file directly from the file system is deprecated. You should instead try running `mvn jasmine:bdd` from the command line, and then visit `http://localhost:8234` in your browser. "))
    }
    
    var specs = $specsList$;
				
    var configuration = {
      $if(customRunnerConfiguration)$
      $customRunnerConfiguration$
      $endif$
    };
    
    if (!configuration.baseUrl) {
    	configuration.baseUrl = '$sourceDir$';
    }
    
    if (!configuration.paths) {
    	configuration.paths = {};
    }
    
    if (!configuration.paths.specs) {
    	var specDir = '$specDir$';
    	if (!specDir.match(/^file/)) {
    		specDir = '/'+specDir;
    	}
    	configuration.paths.specs = specDir;
    }
          
    require.config(configuration);

    //Don't do live updates when running through HTMLUnit
    if ('$reporter$' == 'JsApiReporter'){
		jasmine.getEnv().updateInterval = Number.MAX_VALUE;
    }

    var runJasmine = window.onload;
    window.onload = undefined;

    require(specs, runJasmine);

  </script>
</head>
<body>
</body>
</html>